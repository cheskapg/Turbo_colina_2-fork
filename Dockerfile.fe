# Base image
FROM node:18 AS base

# Install Turbo CLI globally
RUN npm install -g turbo

# Builder stage
FROM base AS builder
WORKDIR /app

# Copy the entire project, including package.json and package-lock.json
COPY . .

# Prune the monorepo to include what's needed for fe
RUN turbo prune --scope="@repo/fe" --docker
RUN echo "Pruned monorepoFDD"

FROM base AS installer
WORKDIR /app

# First install the dependencies (as they change less often)
COPY --from=builder /app/out/json/ .
RUN npm install

# Runner stage
FROM base AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

WORKDIR /app/apps/fe

# Run the build command to generate the .next directory
RUN npm turbo run build
RUN echo "Built the application."

# List files in the .next directory
RUN echo "Contents of /app/apps/fe/.next:" && ls -la /app/apps/fe/.next

# List files in the public directory
RUN echo "Contents of /app/apps/fe/public:" && ls -la /app/apps/fe/public

# Automatically leverage output traces to reduce image size
COPY --from=installer --chown=nextjs:nodejs /app/apps/fe/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/apps/fe/.next/static ./apps/web/.next/static
COPY --from=installer --chown=nextjs:nodejs /app/apps/fe/public ./apps/web/public

# List the files in the target directories to confirm the copy was successful
RUN echo "Contents of the copied .next/standalone directory:" && ls -la ./standalone
RUN echo "Contents of the copied static directory:" && ls -la ./apps/web/.next/static
RUN echo "Contents of the copied public directory:" && ls -la ./apps/web/public

WORKDIR /app
CMD ["node", "apps/fe/server.js"]
