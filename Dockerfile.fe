# Base image
FROM node:18 AS base  
# Install Turbo CLI globally
RUN npm install -g turbo

# Builder stage
FROM base AS builder
WORKDIR /app

# Copy root package.json and package-lock.json
COPY package.json package-lock.json ./
RUN echo "Copied root package.json and package-lock.json"

# Copy apps and packages directories
COPY apps ./apps
RUN echo "Copied apps directory. Contents: $(ls -la ./apps)"

COPY packages ./packages
RUN echo "Copied packages directory. Contents: $(ls -la ./packages)"

# Install dependencies for the entire monorepo
RUN npm install
RUN echo "Installed dependencies. Node modules: $(ls -la ./node_modules)"

# Run Turbo to build the entire monorepo
RUN yarn turbo run build
RUN echo "Turbo build completed"

# Prune the monorepo to include what's needed for fe
RUN turbo prune --scope="@repo/fe" --docker
RUN echo "Pruned monorepo"

# Installer stage
FROM base AS installer
WORKDIR /app

# Copy the pruned output from the builder stage
COPY --from=builder /app/out/full ./out/full
RUN echo "Copied pruned output. Contents of out/full: $(ls -la ./out/full)"

# Copy FE specific files
WORKDIR /app/apps/fe
COPY apps/fe/package.json ./
RUN echo "Copied FE package.json. Contents: $(cat ./package.json)"

COPY --from=builder /app/out/full/node_modules ./node_modules
RUN echo "Copied node_modules for FE. Contents: $(ls -la ./node_modules)"

# Build the application using Yarn and Turbo
RUN yarn turbo run build --filter=@repo/fe...
RUN echo "FE build completed"

# Final stage for running the application
FROM base AS runner
WORKDIR /app/apps/fe
COPY --from=installer /app/apps/fe .
CMD ["node", "server.js"]  # Adjust to your entry point
