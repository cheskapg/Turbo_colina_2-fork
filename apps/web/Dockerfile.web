# 1. Base image for web
FROM node:18-alpine AS base

# Install necessary packages
RUN apk add --no-cache libc6-compat
RUN apk update

# Set the working directory inside the container
WORKDIR /app

# Install global packages
RUN npm install -g turbo tailwindcss 

# 2. Builder stage for web
FROM base AS builder

# Copy everything to the container
COPY . .

# Prune the monorepo to include what's needed for web
RUN turbo prune --scope="@repo/web" --docker

# Install dependencies based on pruned output
COPY package-lock.json ./out/full/package-lock.json
RUN npm install --prefix ./out/full

# 3. Installer stage for web
FROM base AS installer

# Set the working directory
WORKDIR /app

# Copy the pruned output from the builder stage
COPY --from=builder /app/out/full ./out/full

# Copy the packages and apps folders
COPY ./packages ./packages
COPY ./apps ./apps

# Set the working directory for web
WORKDIR /app/apps/web

# Copy the next module from out/full to web
COPY --from=builder /app/out/full/node_modules/next ./node_modules/next

# Build the web application
RUN npm run build

# 4. Runner stage for web
FROM base AS web_runner

# Set the working directory
WORKDIR /app

# Copy the built web app from the installer stage
COPY --from=installer /app/out/full/apps/web ./apps/web

# Expose the port for web
ENV PORT=4000
EXPOSE 4000
WORKDIR /app/apps/web
RUN npm install

# Production start
CMD ["npm", "start"]