# 1. Base image for fe
FROM node:18-alpine AS base

# Install necessary packages
RUN apk add --no-cache libc6-compat

# Set the working directory inside the container
WORKDIR /app

# Install global packages
RUN npm install -g turbo tailwindcss 

# 2. Builder stage for fe
FROM base AS builder

# Copy only the necessary files to the container
COPY package.json package-lock.json ./
COPY ./apps/fe ./apps/fe
COPY ./packages ./packages

# Prune the monorepo to include what's needed for fe
RUN turbo prune --scope="@repo/fe" --docker

# Install dependencies based on pruned output
COPY ./out/full/package-lock.json ./out/full/package-lock.json
RUN npm install --prefix ./out/full

# 3. Installer stage for fe
FROM base AS installer

# Set the working directory
WORKDIR /app

# Copy the pruned output from the builder stage
COPY --from=builder /app/out/full ./out/full

# Set the working directory for fe
WORKDIR /app/apps/fe

# Copy the next module from out/full to fe
COPY --from=builder /app/out/full/node_modules/next ./node_modules/next

# Build the fe application
RUN npm run build

# 4. Runner stage for fe
FROM base AS fe_runner

# Set the working directory
WORKDIR /app

# Copy the built fe app from the installer stage
COPY --from=installer /app/apps/fe ./apps/fe

# Expose the port for fe
ENV PORT=3000
EXPOSE 3000

# Use standalone output
CMD ["node", "apps/fe/server.js"]